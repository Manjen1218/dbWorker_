<svg viewBox="0 0 1000 1400" xmlns="http://www.w3.org/2000/svg">
  <defs>
    <style>
      .title { font-family: Arial, sans-serif; font-size: 18px; font-weight: bold; text-anchor: middle; }
      .section-title { font-family: Arial, sans-serif; font-size: 14px; font-weight: bold; text-anchor: middle; }
      .text { font-family: Arial, sans-serif; font-size: 12px; text-anchor: middle; }
      .small-text { font-family: Arial, sans-serif; font-size: 10px; text-anchor: middle; }
      .legend-text { font-family: Arial, sans-serif; font-size: 11px; }
      
      .start-end { fill: #81C784; stroke: #4CAF50; stroke-width: 2; }
      .single-thread { fill: #64B5F6; stroke: #2196F3; stroke-width: 2; }
      .fork-join { fill: #FFB74D; stroke: #FF9800; stroke-width: 2; }
      .consumer-thread { fill: #BA68C8; stroke: #9C27B0; stroke-width: 2; }
      .thread-pool { fill: #FF8A65; stroke: #FF5722; stroke-width: 2; }
      .worker-threads { fill: #78909C; stroke: #607D8B; stroke-width: 2; }
      .data-queue { fill: #4DB6AC; stroke: #009688; stroke-width: 2; }
      .exception-collection { fill: #FFCC02; stroke: #FFA000; stroke-width: 2; }
      .parallel-flow { fill: #E1BEE7; stroke: #9C27B0; stroke-width: 1; stroke-dasharray: 5,5; }
      
      .flow-arrow { stroke: #333; stroke-width: 2; fill: none; marker-end: url(#arrowhead); }
      .fork-arrow { stroke: #FF9800; stroke-width: 2; fill: none; marker-end: url(#arrowhead); }
      .join-arrow { stroke: #4CAF50; stroke-width: 2; fill: none; marker-end: url(#arrowhead); }
    </style>
    <marker id="arrowhead" markerWidth="10" markerHeight="7" refX="9" refY="3.5" orient="auto">
      <polygon points="0 0, 10 3.5, 0 7" fill="#333" />
    </marker>
  </defs>

  <!-- Title -->
  <text x="500" y="25" class="title">DBWorker Sequential Processing Architecture</text>

  <!-- Main Thread Start -->
  <rect x="420" y="50" width="160" height="40" class="start-end" rx="5"/>
  <text x="500" y="75" class="section-title">Main Thread Start</text>

  <!-- Load Configuration -->
  <rect x="420" y="110" width="160" height="40" class="single-thread" rx="5"/>
  <text x="500" y="135" class="text">Load JSON Config</text>

  <!-- Decision Point -->
  <rect x="360" y="170" width="280" height="60" class="single-thread" rx="5"/>
  <text x="500" y="195" class="section-title">Check Config Options</text>
  <text x="500" y="215" class="small-text">global_db mode? mcc_rule exists? (Most: Normal Process)</text>

  <!-- STEP 1: Schema Check & Re-schema -->
  <rect x="200" y="260" width="600" height="40" class="fork-join" rx="5"/>
  <text x="500" y="285" class="section-title">STEP 1: Schema Check &amp; Re-schema (IF schema differs)</text>

  <!-- Re-schema Fork Point -->
  <rect x="100" y="320" width="800" height="40" class="fork-join" rx="5"/>
  <text x="500" y="345" class="section-title">Fork Multi-process: Parse new fields only + Delete old + Insert updated</text>

  <!-- Re-schema Workers -->
  <g id="reschema-parallel">
    <rect x="50" y="380" width="120" height="60" class="worker-threads" rx="5"/>
    <text x="110" y="405" class="text">Worker 1</text>
    <text x="110" y="420" class="small-text">8 threads</text>

    <rect x="190" y="380" width="120" height="60" class="worker-threads" rx="5"/>
    <text x="250" y="405" class="text">Worker 2</text>
    <text x="250" y="420" class="small-text">8 threads</text>

    <rect x="330" y="380" width="120" height="60" class="worker-threads" rx="5"/>
    <text x="390" y="405" class="text">Worker 3</text>
    <text x="390" y="420" class="small-text">8 threads</text>

    <text x="500" y="410" class="text">... (7 total)</text>

    <rect x="570" y="380" width="120" height="60" class="worker-threads" rx="5"/>
    <text x="630" y="405" class="text">Worker 7</text>
    <text x="630" y="420" class="small-text">8 threads</text>

    <rect x="730" y="380" width="120" height="60" class="consumer-thread" rx="5"/>
    <text x="790" y="405" class="text">DB Writer</text>
    <text x="790" y="420" class="small-text">Single Process</text>
  </g>

  <!-- Re-schema Join Point -->
  <rect x="200" y="460" width="600" height="40" class="fork-join" rx="5"/>
  <text x="500" y="485" class="section-title">Join: Wait for all re-schema processes to complete</text>

  <!-- STEP 2: File Processing -->
  <rect x="200" y="530" width="600" height="40" class="fork-join" rx="5"/>
  <text x="500" y="555" class="section-title">STEP 2: File Processing (Check recently_days vs local files)</text>

  <!-- File Processing Fork Point -->
  <rect x="100" y="590" width="800" height="40" class="fork-join" rx="5"/>
  <text x="500" y="615" class="section-title">Fork Multi-process: Batch parse difference files + Collect results + Write DB</text>

  <!-- File Processing Workers -->
  <g id="file-parallel">
    <rect x="50" y="650" width="120" height="60" class="worker-threads" rx="5"/>
    <text x="110" y="675" class="text">Worker 1</text>
    <text x="110" y="690" class="small-text">8 threads</text>

    <rect x="190" y="650" width="120" height="60" class="worker-threads" rx="5"/>
    <text x="250" y="675" class="text">Worker 2</text>
    <text x="250" y="690" class="small-text">8 threads</text>

    <rect x="330" y="650" width="120" height="60" class="worker-threads" rx="5"/>
    <text x="390" y="675" class="text">Worker 3</text>
    <text x="390" y="690" class="small-text">8 threads</text>

    <text x="500" y="680" class="text">... (7 total)</text>

    <rect x="570" y="650" width="120" height="60" class="worker-threads" rx="5"/>
    <text x="630" y="675" class="text">Worker 7</text>
    <text x="630" y="690" class="small-text">8 threads</text>

    <rect x="730" y="650" width="120" height="60" class="consumer-thread" rx="5"/>
    <text x="790" y="675" class="text">DB Writer</text>
    <text x="790" y="690" class="small-text">Single Process</text>
  </g>

  <!-- File Processing Join Point -->
  <rect x="200" y="730" width="600" height="40" class="fork-join" rx="5"/>
  <text x="500" y="755" class="section-title">Join: Wait for all file processing to complete</text>

  <!-- STEP 3: MCC Processing -->
  <rect x="200" y="800" width="600" height="40" class="fork-join" rx="5"/>
  <text x="500" y="825" class="section-title">STEP 3: MCC Processing (IF mcc_rule exists)</text>

  <!-- MCC Fork Point -->
  <rect x="100" y="860" width="800" height="40" class="fork-join" rx="5"/>
  <text x="500" y="885" class="section-title">Fork Multi-process: Parse required fields + Delete old + Insert new (Similar to re-schema)</text>

  <!-- MCC Workers -->
  <g id="mcc-parallel">
    <rect x="50" y="920" width="120" height="60" class="worker-threads" rx="5"/>
    <text x="110" y="945" class="text">Worker 1</text>
    <text x="110" y="960" class="small-text">8 threads</text>

    <rect x="190" y="920" width="120" height="60" class="worker-threads" rx="5"/>
    <text x="250" y="945" class="text">Worker 2</text>
    <text x="250" y="960" class="small-text">8 threads</text>

    <rect x="330" y="920" width="120" height="60" class="worker-threads" rx="5"/>
    <text x="390" y="945" class="text">Worker 3</text>
    <text x="390" y="960" class="small-text">8 threads</text>

    <text x="500" y="950" class="text">... (7 total)</text>

    <rect x="570" y="920" width="120" height="60" class="worker-threads" rx="5"/>
    <text x="630" y="945" class="text">Worker 7</text>
    <text x="630" y="960" class="small-text">8 threads</text>

    <rect x="730" y="920" width="120" height="60" class="consumer-thread" rx="5"/>
    <text x="790" y="945" class="text">DB Writer</text>
    <text x="790" y="960" class="small-text">8 threads</text>
  </g>

  <!-- MCC Join Point -->
  <rect x="200" y="1000" width="600" height="40" class="fork-join" rx="5"/>
  <text x="500" y="1025" class="section-title">Join: Wait for all MCC processing to complete</text>

  <!-- STEP 4: Exception Processing -->
  <rect x="200" y="1070" width="600" height="60" class="exception-collection" rx="5"/>
  <text x="500" y="1095" class="section-title">STEP 4: Exception Processing</text>
  <text x="500" y="1115" class="small-text">Handle failed files from Step 2 → Push to exception DB → Final cleanup</text>

  <!-- Next Test Station -->
  <rect x="420" y="1160" width="160" height="40" class="single-thread" rx="5"/>
  <text x="500" y="1185" class="text">Next Test Station</text>

  <!-- Final Results -->
  <rect x="420" y="1220" width="160" height="40" class="start-end" rx="5"/>
  <text x="500" y="1245" class="section-title">Return Results</text>

  <!-- Sequential Flow Arrows -->
  <line x1="500" y1="90" x2="500" y2="110" class="flow-arrow"/>
  <line x1="500" y1="150" x2="500" y2="170" class="flow-arrow"/>
  <line x1="500" y1="230" x2="500" y2="260" class="flow-arrow"/>
  <line x1="500" y1="300" x2="500" y2="320" class="flow-arrow"/>
  
  <!-- Fork arrows for re-schema -->
  <line x1="500" y1="360" x2="110" y2="380" class="fork-arrow"/>
  <line x1="500" y1="360" x2="250" y2="380" class="fork-arrow"/>
  <line x1="500" y1="360" x2="390" y2="380" class="fork-arrow"/>
  <line x1="500" y1="360" x2="630" y2="380" class="fork-arrow"/>
  <line x1="500" y1="360" x2="790" y2="380" class="fork-arrow"/>
  
  <!-- Join arrows for re-schema -->
  <line x1="110" y1="440" x2="500" y2="460" class="join-arrow"/>
  <line x1="250" y1="440" x2="500" y2="460" class="join-arrow"/>
  <line x1="390" y1="440" x2="500" y2="460" class="join-arrow"/>
  <line x1="630" y1="440" x2="500" y2="460" class="join-arrow"/>
  <line x1="790" y1="440" x2="500" y2="460" class="join-arrow"/>

  <line x1="500" y1="500" x2="500" y2="530" class="flow-arrow"/>
  <line x1="500" y1="570" x2="500" y2="590" class="flow-arrow"/>
  
  <!-- Fork arrows for file processing -->
  <line x1="500" y1="630" x2="110" y2="650" class="fork-arrow"/>
  <line x1="500" y1="630" x2="250" y2="650" class="fork-arrow"/>
  <line x1="500" y1="630" x2="390" y2="650" class="fork-arrow"/>
  <line x1="500" y1="630" x2="630" y2="650" class="fork-arrow"/>
  <line x1="500" y1="630" x2="790" y2="650" class="fork-arrow"/>
  
  <!-- Join arrows for file processing -->
  <line x1="110" y1="710" x2="500" y2="730" class="join-arrow"/>
  <line x1="250" y1="710" x2="500" y2="730" class="join-arrow"/>
  <line x1="390" y1="710" x2="500" y2="730" class="join-arrow"/>
  <line x1="630" y1="710" x2="500" y2="730" class="join-arrow"/>
  <line x1="790" y1="710" x2="500" y2="730" class="join-arrow"/>

  <line x1="500" y1="770" x2="500" y2="800" class="flow-arrow"/>
  <line x1="500" y1="840" x2="500" y2="860" class="flow-arrow"/>
  
  <!-- Fork arrows for MCC -->
  <line x1="500" y1="900" x2="110" y2="920" class="fork-arrow"/>
  <line x1="500" y1="900" x2="250" y2="920" class="fork-arrow"/>
  <line x1="500" y1="900" x2="390" y2="920" class="fork-arrow"/>
  <line x1="500" y1="900" x2="630" y2="920" class="fork-arrow"/>
  <line x1="500" y1="900" x2="790" y2="920" class="fork-arrow"/>
  
  <!-- Join arrows for MCC -->
  <line x1="110" y1="980" x2="500" y2="1000" class="join-arrow"/>
  <line x1="250" y1="980" x2="500" y2="1000" class="join-arrow"/>
  <line x1="390" y1="980" x2="500" y2="1000" class="join-arrow"/>
  <line x1="630" y1="980" x2="500" y2="1000" class="join-arrow"/>
  <line x1="790" y1="980" x2="500" y2="1000" class="join-arrow"/>

  <line x1="500" y1="1040" x2="500" y2="1070" class="flow-arrow"/>
  <line x1="500" y1="1130" x2="500" y2="1160" class="flow-arrow"/>
  <line x1="500" y1="1200" x2="500" y2="1220" class="flow-arrow"/>
  
  <!-- Legend -->
  <g id="legend" transform="translate(50, 1280)">
    <rect x="0" y="0" width="400" height="90" fill="white" stroke="#ccc" stroke-width="1" rx="3"/>
    <text x="10" y="15" class="section-title">Legend</text>
    
    <rect x="10" y="20" width="15" height="10" class="start-end"/>
    <text x="30" y="29" class="legend-text">Start/End Points</text>
    
    <rect x="150" y="20" width="15" height="10" class="single-thread"/>
    <text x="170" y="29" class="legend-text">Single-threaded Operations</text>
    
    <rect x="10" y="35" width="15" height="10" class="fork-join"/>
    <text x="30" y="44" class="legend-text">Fork/Join Points</text>
    
    <rect x="150" y="35" width="15" height="10" class="worker-threads"/>
    <text x="170" y="44" class="legend-text">Worker Threads</text>
    
    <rect x="10" y="50" width="15" height="10" class="consumer-thread"/>
    <text x="30" y="59" class="legend-text">DB Writer Process</text>
    
    <rect x="150" y="50" width="15" height="10" class="exception-collection"/>
    <text x="170" y="59" class="legend-text">Exception Processing</text>

    <text x="10" y="80" class="legend-text">Sequential Steps: Each step completes before next step begins</text>
  </g>

  <!-- Key Points -->
  <g id="key-points" transform="translate(500, 1280)">
    <rect x="0" y="0" width="450" height="90" fill="#f9f9f9" stroke="#ccc" stroke-width="1" rx="3"/>
    <text x="10" y="15" class="section-title">Key Points</text>
    <text x="10" y="35" class="small-text">1. SEQUENTIAL processing: Step 1 → Step 2 → Step 3 → Step 4</text>
    <text x="10" y="50" class="small-text">2. Each step: Fork to 7 workers × 8 threads + 1 DB writer, then Join</text>
    <text x="10" y="65" class="small-text">3. DatabaseLockManager ensures exclusive access per step</text>
    <text x="10" y="80" class="small-text">4. Process repeats for each test_station in configuration</text>
  </g>
</svg>